name: Phoebus build

on: [push, pull_request]

jobs:
  build-container-linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Docker Buildx
      id: buildx
      uses: docker/setup-buildx-action@v1
      with:
        context: .
    - name: Cache Docker layers
      uses: actions/cache@v2
      with:
        path: /tmp/.buildx-cache
        key: ${{ runner.os }}-buildx-${{ github.sha }}
        restore-keys: |
          ${{ runner.os }}-buildx-
    - uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
    - name: Build and push
      id: docker_build
      uses: docker/build-push-action@v2
      with:
        context: ./
        file: ./misc/docker/Dockerfile
        builder: ${{ steps.buildx.outputs.name }}
        push: true
        tags: lgomezwhl/phoebus-ci:latest
        cache-from: type=local,src=/tmp/.buildx-cache
        cache-to: type=local,dest=/tmp/.buildx-cache
    - name: Image digest
      run: echo ${{ steps.docker_build.outputs.digest }}
  build-whl-container-linux:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          context: .
      - name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-${{ github.sha }}
          restore-keys: |
            ${{ runner.os }}-buildx-
      - uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: ./
          file: ./misc/docker/whl/Dockerfile
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: lgomezwhl/phoebus-ci:whl-latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,dest=/tmp/.buildx-cache
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}
  build-linux:
    runs-on: ubuntu-latest
#    container:
#      image: lgomezwhl/phoebus-ci:whl-latest
    steps:
    - uses: actions/checkout@v2
    - run: |
        git fetch --prune --unshallow --tags
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Check coding style
      run: |
        cd core/commander-core
        mvn fmt:check
        cd ../..
        cd app/commander
        mvn fmt:check
        cd ../..

    - name: Install dependencies
      run: |
        sudo apt install -y protobuf-compiler

    - name: Build
      run: mvn -Dgpg.skip=true --batch-mode install
    - name: Publish
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: mvn -Dgpg.skip=true --batch-mode -DskipTests deploy
      if: ${{ github.repository == 'ControlSystemStudio/phoebus' && (github.ref == 'refs/heads/master' || github.ref == 'refs/tags/*') }}

    - name: Download Coverity Build Tool
      env:
        TOKEN: ${{ secrets.COVERITY_TOKEN }}
      run: |
        wget -q https://scan.coverity.com/download/java/linux64 --post-data "token=$TOKEN&project=WindhoverLabs/phoebus" -O cov-analysis-linux64.tar.gz
        mkdir cov-analysis-linux64
        tar xzf cov-analysis-linux64.tar.gz --strip 1 -C cov-analysis-linux64
    - name: Static analysis
      env:
        TOKEN: ${{ secrets.COVERITY_TOKEN }}
      run: |
        export PATH=`pwd`/cov-analysis-linux64/bin:$PATH
        cov-build --dir cov-int mvn -Dgpg.skip=true -DskipTests install
    - name: Submit static analysis results
      env:
        TOKEN: ${{ secrets.COVERITY_TOKEN }}
      run: |
        tar czvf commander-analysis.tgz cov-int
        curl \
          --form token=$TOKEN \
          --form email=lgomez@windhoverlabs.com \
          --form file=@commander-analysis.tgz \
          --form version=SNAPSHOT \
          --form description="" \
          https://scan.coverity.com/builds?project=WindhoverLabs%2Fphoebus


    - name: Tag Repo
      uses: richardsimko/update-tag@v1
      with:
        tag_name: Commander-nightly-build
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Delete old release assets
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ github.token }}
        tag: Commander-nightly-build # This may also be of the form 'refs/tags/staging'
        assets: '*nightly-linux-x86_64.zip'
        fail-if-no-release: false

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@2.2.1
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: phoebus-product/target/product-4.6.6-SNAPSHOT.zip
        asset_name: Commander_${{github.sha}}-SNAPSHOT-nightly-linux-x86_64.zip
        tag: Commander-nightly-build
        overwrite: true
        body: "Latest and greatest nightly build. This is NOT a stable version."

  build-windows:
    runs-on: ubuntu-latest
    container:
      image: lgomezwhl/phoebus-ci:whl-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 11
      uses: actions/setup-java@v1
      with:
        java-version: 11
    - name: Check coding style
      run: |
        cd core/commander-core
        mvn fmt:check
        cd ../..
        cd app/commander
        mvn fmt:check
        cd ../..

    - name: Build
      run: mvn -Djavafx.platform=win -DskipTests -T6 verify

    - name: Delete old release assets
      uses: mknejp/delete-release-assets@v1
      with:
        token: ${{ github.token }}
        tag: Commander-nightly-build # This may also be of the form 'refs/tags/staging'
        assets: '*nightly-windows-x86_64.zip.zip'
        fail-if-no-release: false

    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@2.2.1
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: phoebus-product/target/product-4.6.6-SNAPSHOT.zip
        asset_name: Commander_${{github.sha}}-SNAPSHOT-nightly-windows-x86_64.zip
        tag: Commander-nightly-build
        overwrite: true
        body: "Latest and greatest nightly build. This is NOT a stable version."
  build-macOS:
    runs-on: ubuntu-latest
    container:
      image: lgomezwhl/phoebus-ci:whl-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 11
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - name: Check coding style
        run: |
          cd core/commander-core
          mvn fmt:check
          cd ../..
          cd app/commander
          mvn fmt:check
          cd ../..

      - name: Build
        run: mvn -Djavafx.platform=mac -DskipTests -T6 verify

      - name: Delete old release assets
        uses: mknejp/delete-release-assets@v1
        with:
          token: ${{ github.token }}
          tag: Commander-nightly-build # This may also be of the form 'refs/tags/staging'
          assets: '*nightly-mac-x86_64.zip'
          fail-if-no-release: false

      - name: Upload binaries to release
        uses: svenstaro/upload-release-action@2.2.1
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: phoebus-product/target/product-4.6.6-SNAPSHOT.zip
          asset_name: Commander_${{github.sha}}-SNAPSHOT-nightly-mac-x86_64.zip
          tag: Commander-nightly-build
          overwrite: true
          body: "Latest and greatest nightly build. This is NOT a stable version."

